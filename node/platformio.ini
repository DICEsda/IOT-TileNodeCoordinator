[platformio]
default_envs = esp32-c3-mini-1

[common]
; Common settings shared by all environments
lib_deps = 
    bblanchon/ArduinoJson @ ^6.21.3
    adafruit/Adafruit NeoPixel @ ^1.11.0
    ESP32Time
    SPI
    Wire
    Preferences
lib_extra_dirs = 
    ../shared
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -DCONFIG_ESP32C3_DEFAULT_CPU_FREQ_160=1
    -DCONFIG_ESP32C3_DEFAULT_CPU_FREQ_MHZ=160
    -DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1

[env:esp32-c3-mini-1]
platform = espressif32
board = esp32-c3-devkitm-1
framework = arduino
monitor_speed = 115200
upload_speed = 921600
; Explicitly set MCU and variant for proper include paths
board_build.mcu = esp32c3
board_build.variant = esp32c3

; Build flags
build_flags = 
    ${common.build_flags}
    -DENABLE_DEEP_SLEEP


; Libraries
lib_deps = ${common.lib_deps}

; Library paths
lib_extra_dirs = ${common.lib_extra_dirs}

; Partition scheme for OTA
board_build.partitions = huge_app.csv

; Upload settings
upload_protocol = esptool
upload_port = COM7




; Monitor settings
monitor_filters = esp32_exception_decoder
monitor_port = COM7
monitor_dtr = 0
monitor_rts = 0

[env:esp32-c3-mini-1-ota]
platform = espressif32
board = esp32-c3-devkitm-1
framework = arduino
monitor_speed = 115200
upload_speed = 921600
; Explicitly set MCU and variant for proper include paths
board_build.mcu = esp32c3
board_build.variant = esp32c3

; Use default OTA-friendly partition (e.g., default or minimal SPIFFS)
board_build.partitions = default.csv

build_flags =
    ${common.build_flags}
    -DENABLE_DEEP_SLEEP

lib_deps = ${common.lib_deps}
lib_extra_dirs = ${common.lib_extra_dirs}

[env:esp32-c3-mini-1-standalone]
platform = espressif32
board = esp32-c3-devkitm-1
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.mcu = esp32c3
board_build.variant = esp32c3
build_flags =
    ${common.build_flags}
    -DSTANDALONE_TEST
lib_deps = ${common.lib_deps}
lib_extra_dirs = ${common.lib_extra_dirs}
; Ignore the shared library (../shared/src) for standalone build
lib_ignore = src
; Pin ports for convenience in standalone mode
upload_port = COM7
monitor_port = COM7
; Keep lines stable on C3 USB serial
monitor_dtr = 0
monitor_rts = 0

[env:esp32-c3-mini-1-debug]
extends = env:esp32-c3-mini-1
# Build with debug symbols so esp32_exception_decoder can decode crashes
build_type = debug
# Optional: bump core debug verbosity for Arduino core logs
build_flags =
    ${env:esp32-c3-mini-1.build_flags}
    -DCORE_DEBUG_LEVEL=5
# Pin monitor/upload to the current port (adjust if your COM changes)
upload_port = COM7
monitor_port = COM7
# ESP32-C3 sometimes auto-resets when DTR/RTS are toggled; set to 0 to keep stable
monitor_dtr = 0
monitor_rts = 0

